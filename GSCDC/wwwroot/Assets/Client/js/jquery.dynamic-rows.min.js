/*
 * ssdDynamicRows jQuery plugin
 * Examples and documentation at: https://github.com/sebastiansulinski/dynamic-rows
 * Copyright (c) 2015 Sebastian Sulinski <info@ssdtutorials.com>
 * Version: 3.0.2 (23-DEC-2015)
 * Licensed under the MIT.
 * Requires: jQuery v1.9 or later
 */
!function(t){t.fn.ssdDynamicRows=function(n){"use strict";function i(t){t.preventDefault(),t.stopPropagation()}function e(t,n){t.find(f.button_remove).removeClass(f.hide_css_class),n.length<2&&n.last().find(f.button_remove).addClass(f.hide_css_class)}function s(t,n){t.find(f.button_add).addClass(f.hide_css_class),n.last().find(f.button_add).removeClass(f.hide_css_class)}function o(t){var n=t.children(f.row);e(t,n),s(t,n)}function a(t){o(t)}function r(n){var i=n.find(":input"),e=n.find("label");return t.each(i,function(){var n=t(this).prop("id").split(f.divider),i=parseInt(n[1],10)+1,e=n[0]+f.divider+i;t(this).prop("name",e).prop("id",e).val("")}),t.each(e,function(){var n=t(this).prop("for").split(f.divider),i=parseInt(n[1],10)+1,e=n[0]+f.divider+i;t(this).prop("for",e)}),t.each(f.other_elements,function(i,e){var s=n.find(i);t.each(s,function(){var n=t(this).attr(e).split(f.divider),i=parseInt(n[1],10)+1,s=n[0]+f.divider+i;t(this).attr(e,s)})}),f.clear_warning(n),n}function d(t){return r(t.closest(f.row).clone())}function c(n){n.on(f.event_type,f.button_add,function(e){i(e);var s=t(this).closest(f.row),a=d(s);n.append(a),o(n)})}function u(n){n.on(f.event_type,f.button_remove,function(e){i(e);var s=t(this).closest(f.row);s.fadeOut(200,function(){t(this).remove(),o(n)})})}var f=t.extend({event_type:"click",hide_css_class:"dn",row:"[data-ssd-dynamic-row]",button_add:"[data-ssd-dynamic-add]",button_remove:"[data-ssd-dynamic-remove]",other_elements:{},divider:"-",clear_warning:function(t){}},n);return this.each(function(){a(t(this)),c(t(this)),u(t(this))})}}(window.jQuery);